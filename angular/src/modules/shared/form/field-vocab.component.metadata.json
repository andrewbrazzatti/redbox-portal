[{"__symbolic":"module","version":4,"metadata":{"VocabField":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./field-base","name":"FieldBase","line":39,"character":32},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","name":"any"}]}],"createFormModel":[{"__symbolic":"method"}],"postInit":[{"__symbolic":"method"}],"setEmptyValue":[{"__symbolic":"method"}],"setLookupServices":[{"__symbolic":"method"}],"initLookupData":[{"__symbolic":"method"}],"getTitle":[{"__symbolic":"method"}],"getValue":[{"__symbolic":"method"}],"getFieldValuePair":[{"__symbolic":"method"}]}},"VocabFieldLookupService":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../base-service","name":"BaseService","line":297,"character":45},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":296,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":299,"character":16},"arguments":[{"__symbolic":"reference","module":"@angular/http","name":"Http","line":299,"character":23}]}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":299,"character":42},"arguments":[{"__symbolic":"reference","module":"../config-service","name":"ConfigService","line":299,"character":49}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http","line":299,"character":35},{"__symbolic":"reference","module":"../config-service","name":"ConfigService","line":299,"character":89}]}],"getLookupData":[{"__symbolic":"method"}],"getCollectionRootUrl":[{"__symbolic":"method"}],"getUserLookupUrl":[{"__symbolic":"method"}],"findLookupData":[{"__symbolic":"method"}],"getMintRootUrl":[{"__symbolic":"method"}]}},"VocabFieldComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./field-simple.component","name":"SimpleComponent","line":371,"character":41},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":337,"character":1},"arguments":[{"selector":"rb-vocab","template":"\n  <div *ngIf=\"field.editMode && !isEmbedded\" [formGroup]='form' [ngClass]=\"getGroupClass()\">\n    <label>\n      {{field.label}} {{getRequiredLabelStr()}}\n      <button type=\"button\" class=\"btn btn-default\" *ngIf=\"field.help\" (click)=\"toggleHelp()\"><span class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></span></button>\n    </label>\n    <span id=\"{{ 'helpBlock_' + field.name }}\" class=\"help-block\" *ngIf=\"this.helpShow\" >{{field.help}}</span>\n    <ng2-completer [(ngModel)]=\"searchStr\" [ngModelOptions]=\"{standalone: true}\" [disableInput]=\"disableInput\" [placeholder]=\"field.placeHolder\" [clearUnselected]=\"disableEditAfterSelect && field.disableEditAfterSelect\" (keyup)=\"onKeyup($event)\" (selected)=\"onSelect($event)\" [datasource]=\"field.dataService\" [minSearchLength]=\"0\" [inputClass]=\"'form-control'\" [initialValue]=\"field.initialValue\"></ng2-completer>\n    <div class=\"text-danger\" *ngIf=\"hasRequiredError()\">{{field.validationMessages.required}}</div>\n  </div>\n  <div *ngIf=\"field.editMode && isEmbedded\" [formGroup]='form' [ngClass]=\"getGroupClass()\">\n    <div class=\"row\">\n      <span id=\"{{ 'helpBlock_' + field.name }}\" class=\"help-block\" *ngIf=\"this.helpShow\" >{{field.help}}</span>\n      <div class=\"col-xs-11 padding-remove\">\n        <ng2-completer [(ngModel)]=\"searchStr\" [ngModelOptions]=\"{standalone: true}\" [disableInput]=\"disableInput\" [placeholder]=\"field.placeHolder\" [clearUnselected]=\"disableEditAfterSelect && field.disableEditAfterSelect\" (keyup)=\"onKeyup($event)\" (selected)=\"onSelect($event)\" [datasource]=\"field.dataService\" [minSearchLength]=\"0\" [inputClass]=\"'form-control'\" [initialValue]=\"field.initialValue\"></ng2-completer>\n      </div>\n      <div class=\"col-xs-1 padding-remove\">\n        <button type='button' *ngIf=\"removeBtnText\" [disabled]=\"!canRemove\" (click)=\"onRemove($event)\" [ngClass]=\"removeBtnClass\" >{{removeBtnText}}</button>\n        <button [disabled]=\"!canRemove\" type='button' [ngClass]=\"removeBtnClass\" (click)=\"onRemove($event)\"></button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-xs-12 text-danger\" *ngIf=\"hasRequiredError()\">{{field.validationMessages.required}}</div>\n    </div>\n  </div>\n\n  <li *ngIf=\"!field.editMode\" class=\"key-value-pair\">\n    <span *ngIf=\"field.label\" class=\"key\">{{field.label}}</span>\n    <span class=\"value\">{{field.getTitle(field.value)}}</span>\n  </li>\n  "}]}],"members":{"field":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":373,"character":3}}]}],"isEmbedded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":374,"character":3}}]}],"canRemove":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":375,"character":3}}]}],"removeBtnText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":376,"character":3}}]}],"removeBtnClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":377,"character":3}}]}],"index":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":378,"character":3}}]}],"disableEditAfterSelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":379,"character":3}}]}],"onRemoveBtnClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":380,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"getGroupClass":[{"__symbolic":"method"}],"onSelect":[{"__symbolic":"method"}],"onKeyup":[{"__symbolic":"method"}],"onRemove":[{"__symbolic":"method"}]}}}}]