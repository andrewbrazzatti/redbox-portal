[{"__symbolic":"module","version":4,"metadata":{"TextFieldComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./field-repeatable.component","name":"EmbeddableComponent","line":56,"character":40},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":26,"character":1},"arguments":[{"selector":"textfield","template":"\n  <div *ngIf=\"field.editMode\" [ngClass]=\"getGroupClass()\">\n    <div *ngIf=\"!isEmbedded\" >\n      <label [attr.for]=\"field.name\">\n        {{field.label}} {{ getRequiredLabelStr() }}\n        <button type=\"button\" class=\"btn btn-default\" *ngIf=\"field.help\" (click)=\"toggleHelp()\"><span class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></span></button>\n        <span id=\"{{ 'helpBlock_' + field.name }}\" class=\"help-block\" *ngIf=\"this.helpShow\" [innerHtml]=\"field.help\"></span>\n      </label>\n      <input [formGroup]='form' [formControl]=\"getFormControl()\"  [id]=\"field.name\" [type]=\"field.type\" [readonly]=\"field.readOnly\" [ngClass]=\"field.cssClasses\" [attr.aria-describedby]=\"field.help ? 'helpBlock_' + field.name : null\">\n    </div>\n    <div *ngIf=\"isEmbedded\" class=\"input-group padding-bottom-15\">\n      <input [formControl]=\"getFormControl(name, index)\"  [id]=\"field.name\" [type]=\"field.type\" [readonly]=\"field.readOnly\" [ngClass]=\"field.cssClasses\" [attr.aria-describedby]=\"field.help ? 'helpBlock_' + field.name : null\">\n      <span class=\"input-group-btn\">\n        <button type='button' *ngIf=\"removeBtnText\" [disabled]=\"!canRemove\" (click)=\"onRemove($event)\" [ngClass]=\"removeBtnClass\" >{{removeBtnText}}</button>\n        <button [disabled]=\"!canRemove\" type='button' [ngClass]=\"removeBtnClass\" (click)=\"onRemove($event)\"></button>\n      </span>\n    </div>\n    <div *ngIf=\"field.required\" [style.visibility]=\"getFormControl() && getFormControl().hasError('required') && getFormControl().touched ? 'inherit':'hidden'\">\n      <div class=\"text-danger\" *ngIf=\"!field.validationMessages?.required\">{{field.label}} is required</div>\n      <div class=\"text-danger\" *ngIf=\"field.validationMessages?.required\">{{field.validationMessages.required}}</div>\n    </div>\n  </div>\n  <div *ngIf=\"!field.editMode\" class=\"key-value-pair\">\n    <span class=\"key\" *ngIf=\"field.label\">{{field.label}}</span>\n    <span class=\"value\">{{field.value}}</span>\n  </div>\n  "}]}]},"RepeatableTextfieldComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./field-repeatable.component","name":"RepeatableComponent","line":94,"character":50},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":60,"character":1},"arguments":[{"selector":"repeatable-textfield","template":"\n  <div *ngIf=\"field.editMode\">\n    <div class=\"row\">\n      <div class=\"col-xs-12\">\n      <label>{{field.label}}\n        <button type=\"button\" class=\"btn btn-default\" *ngIf=\"field.help\" (click)=\"toggleHelp()\"><span class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></span></button>\n      </label>\n      <span id=\"{{ 'helpBlock_' + field.name }}\" class=\"help-block\" *ngIf=\"this.helpShow\" [innerHtml]=\"field.help\"></span>\n      </div>\n    </div>\n    <div *ngFor=\"let fieldElem of field.fields; let i = index;\" class=\"row\">\n      <span class=\"col-xs-12\">\n        <textfield [name]=\"field.name\" [field]=\"fieldElem\" [form]=\"form\" [fieldMap]=\"fieldMap\" [isEmbedded]=\"true\" [removeBtnText]=\"field.removeButtonText\" [removeBtnClass]=\"field.removeButtonClass\" [canRemove]=\"field.fields.length > 1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\"></textfield>\n      </span>\n    </div>\n    <div class=\"row\">\n      <span class=\"col-xs-12\">\n        <button *ngIf=\"field.addButtonText\" type='button' (click)=\"addElem($event)\" [ngClass]=\"field.addButtonTextClass\" >{{field.addButtonText}}</button>\n        <button *ngIf=\"!field.addButtonText\" type='button' (click)=\"addElem($event)\" [ngClass]=\"field.addButtonClass\"></button>\n      </span>\n    </div>\n  </div>\n  <li *ngIf=\"!field.editMode\" class=\"key-value-pair\">\n    <span *ngIf=\"field.label\" class=\"key\">{{field.label}}</span>\n    <span class=\"value\">\n      <ul class=\"key-value-list\">\n        <textfield *ngFor=\"let fieldElem of field.fields; let i = index;\"  [field]=\"fieldElem\" [form]=\"form\" [fieldMap]=\"fieldMap\"></textfield>\n      </ul>\n    </span>\n  </li>\n  "}]}],"members":{"ngOnInit":[{"__symbolic":"method"}],"addElem":[{"__symbolic":"method"}],"removeElem":[{"__symbolic":"method"}]}}}}]